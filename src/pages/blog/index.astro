---
import { getCollection } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import BlogPostCard from '../../components/BlogPostCard.astro'

const posts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
// console.log("index.astro ~ posts:", posts);

// Group posts by month and year
const groupedPosts = posts.reduce(
	(acc, post) => {
		const date = post.data.pubDate
		const key = `${date.getFullYear()}-${String(date.getMonth()).padStart(2, '0')}`
		if (!acc[key]) acc[key] = []
		acc[key].push(post)
		return acc
	},
	{} as Record<string, typeof posts>
)

// Sort keys in descending order (newest first)
const sortedKeys = Object.keys(groupedPosts).sort((a, b) => b.localeCompare(a))
---

<BaseLayout>
	<main class="container mx-auto min-h-screen px-4 py-8">
		{
			sortedKeys.map((key) => {
				const [year, month] = key.split('-')
				const sectionTitle = new Date(parseInt(year), parseInt(month)).toLocaleString('default', {
					month: 'long',
					year: 'numeric'
				})
				return (
					<section class="mb-12">
						<h2 class="mb-6 text-2xl font-bold text-slate-900 dark:text-slate-100">{sectionTitle}</h2>
						<ul class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
							{groupedPosts[key].map((post) => (
								<BlogPostCard post={post} />
							))}
						</ul>
					</section>
				)
			})
		}
	</main>
</BaseLayout>
