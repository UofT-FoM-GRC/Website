---
import { Image } from 'astro:assets'
import TagBadge from './TagBadge.astro'
import FormattedDate from './FormattedDate.astro'

import type { CollectionEntry } from 'astro:content'

const { post } = Astro.props as { post: CollectionEntry<'blog'> }

// Netlify has issues with the heroImage if it is a https url
const heroImageIsExternal = post.data.heroImage?.startsWith('https://') || post.data.heroImage?.startsWith('http://')
---

<li
	class="card flex flex-col overflow-hidden rounded-lg bg-white shadow-md transition-all duration-300 focus-within:-translate-y-1 focus-within:shadow-lg focus-within:ring-2 focus-within:ring-blue-500 hover:-translate-y-1 hover:shadow-lg hover:shadow-blue-300 dark:bg-slate-800 dark:shadow-slate-900/50 dark:hover:shadow-blue-900/50"
	role="article"
>
	<a
		href={`/blog/${post.id}`}
		class="block focus:outline-none focus-visible:ring-3 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
		aria-labelledby={`post-title-${post.id}`}
		aria-describedby={`post-date-${post.id} post-tags-${post.id}`}
	>
		{
			heroImageIsExternal ? (
				<img
					width={720}
					height={360}
					src={post.data.heroImage || '/uoft-placeholder-default.webp'}
					alt={`Featured image for ${post.data.title}`}
					class="aspect-video min-h-72 w-full object-cover object-center"
				/>
			) : (
				<Image
					width={720}
					height={360}
					src={post.data.heroImage || '/uoft-placeholder-default.webp'}
					alt={`Featured image for ${post.data.title}`}
					class="aspect-video min-h-72 w-full object-cover object-center"
				/>
			)
		}
		<div class="p-4">
			<h4 id={`post-title-${post.id}`} class="mb-2 text-xl font-bold dark:text-slate-100">
				{post.data.title}
			</h4>
			<p id={`post-date-${post.id}`} class="text-sm text-gray-600 dark:text-slate-400">
				<FormattedDate date={post.data.pubDate} />
			</p>
		</div>
	</a>
	<div
		id={`post-tags-${post.id}`}
		class="flex flex-wrap justify-start gap-2 border-t-2 border-t-slate-200 p-4 dark:border-t-slate-600"
		aria-label="Post tags"
	>
		{post.data.tags.map((tag) => <TagBadge tag={tag} />)}
	</div>
</li>
